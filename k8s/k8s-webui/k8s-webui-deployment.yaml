apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-webui-backend
  namespace: base-infrastructure
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-webui-backend
  template:
    metadata:
      labels:
        app: k8s-webui-backend
    spec:
      serviceAccountName: k8s-webui
      containers:
      - name: backend
        image: git.arcbjorn.com/archellir/k8s-webui-backend:latest
        ports:
        - containerPort: 3001
        env:
        - name: PORT
          value: "3001"
        - name: NODE_ENV
          value: "production"
        - name: K8S_NAMESPACE
          value: "base-infrastructure"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: K8S_WEBUI_DATABASE_URL
        - name: PASETO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: K8S_WEBUI_PASETO_KEY
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-webui-frontend
  namespace: base-infrastructure
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-webui-frontend
  template:
    metadata:
      labels:
        app: k8s-webui-frontend
    spec:
      containers:
      - name: frontend
        image: git.arcbjorn.com/archellir/k8s-webui-frontend:latest
        ports:
        - containerPort: 3000
        env:
        - name: BACKEND_URL
          value: "http://k8s-webui-backend:3001"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"

---
apiVersion: v1
kind: Service
metadata:
  name: k8s-webui-backend
  namespace: base-infrastructure
spec:
  selector:
    app: k8s-webui-backend
  ports:
  - port: 3001
    targetPort: 3001
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: k8s-webui-frontend
  namespace: base-infrastructure
spec:
  selector:
    app: k8s-webui-frontend
  ports:
  - port: 3000
    targetPort: 3000
  type: ClusterIP

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-webui
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets"]
  verbs: ["get", "list", "watch", "patch"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-webui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-webui
subjects:
- kind: ServiceAccount
  name: k8s-webui
  namespace: base-infrastructure

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-webui
  namespace: base-infrastructure