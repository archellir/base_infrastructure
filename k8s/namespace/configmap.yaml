apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-init-scripts
  namespace: base-infrastructure
data:
  create-multiple-postgresql-databases.sh: |
    #!/bin/bash

    set -e
    set -u

    function create_user_and_database() {
    	local database=$(echo $1 | cut -d':' -f1)
    	local user=$(echo $1 | cut -d':' -f2)
    	local password=$(echo $1 | cut -d':' -f3)
    	echo "  Creating user '$user' and database '$database'"
    	psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" <<-EOSQL
    	    CREATE USER "$user" WITH PASSWORD '$password';
    	    CREATE DATABASE "$database" OWNER "$user";
    	    GRANT ALL PRIVILEGES ON DATABASE "$database" TO "$user";
    EOSQL
    }

    if [ -n "$POSTGRES_MULTIPLE_DATABASES" ]; then
    	echo "Multiple database creation requested: $POSTGRES_MULTIPLE_DATABASES"
    	for db in $(echo $POSTGRES_MULTIPLE_DATABASES | tr ',' ' '); do
    		create_user_and_database $db
    	done
    	echo "Multiple databases created"
    	
    	# Grant schema permissions for each database
    	for db in $(echo $POSTGRES_MULTIPLE_DATABASES | tr ',' ' '); do
    		database=$(echo $db | cut -d':' -f1)
    		user=$(echo $db | cut -d':' -f2)
    		psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$database" <<-EOSQL
    			GRANT ALL PRIVILEGES ON SCHEMA public TO "$user";
    		EOSQL
    	done
    fi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: base-infrastructure
data:
  # PostgreSQL Configuration
  POSTGRES_PORT: "5432"
  
  # Umami Configuration  
  UMAMI_PORT: "3000"